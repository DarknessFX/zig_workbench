// THIS FILE HAS BEEN AUTO-GENERATED BY THE 'DEAR BINDINGS' GENERATOR.
// **DO NOT EDIT DIRECTLY**
// https://github.com/dearimgui/dear_bindings

// THIS FILE HAS BEEN AUTO-GENERATED BY THE 'DEAR BINDINGS' GENERATOR.
// **DO NOT EDIT DIRECTLY**
// https://github.com/dearimgui/dear_bindings

// Helper for staged/multi-threaded rendering v0.10, for Dear ImGui
// Get latest version at http://www.github.com/ocornut/imgui_club
// Licensed under The MIT License (MIT)

// Based on a discussion at https://github.com/ocornut/imgui/issues/1860#issuecomment-1927630727
// Since 1.92.0, textures also needs to be updated. See discussion at https://github.com/ocornut/imgui/issues/8597

// CHANGELOG:
// - v0.10: (2025/04/30): initial version. Not well tested.

// Usage:
/*
    // Storage. Keep persistent as we reuse buffers across frames.
    static ImDrawDataSnapshot snapshot;

    // [Update thread] Take a snapshot of the ImDrawData
    snapshot.SnapUsingSwap(ImGui::GetDrawData(), ImGui::GetTime());

    // [Render thread] Render later
    ImGui_ImplDX11_RenderDrawData(&snapshot.DrawData);
*/

// FIXME: Could store an ID in ImDrawList to make this easier for user.
// Auto-generated forward declarations for C header
typedef struct ImDrawDataSnapshotEntry_t ImDrawDataSnapshotEntry;
typedef struct ImDrawDataSnapshot_t ImDrawDataSnapshot;
#pragma once

#ifdef __cplusplus
extern "C"
{
#endif
#include "imgui_internal.h"
//-----------------------------------------------------------------------------
// ImDrawDataSnapshot - HEADERS
//-----------------------------------------------------------------------------

struct ImDrawDataSnapshotEntry_t
{
    ImDrawList* SrcCopy /* = NULL */;  // Drawlist owned by main context
    ImDrawList* OurCopy /* = NULL */;  // Our copy
    double      LastUsedTime /* = 0.0 */;
};

struct ImDrawDataSnapshot_t
{
    // Members
    ImDrawData                      DrawData;
    ImPool<ImDrawDataSnapshotEntry> Cache;
    float                           MemoryCompactTimer /* = 20.0f */;  // Discard unused data after 20 seconds

    //void                          SnapUsingCopy(ImDrawData* src, double current_time); // Deep-copy snapshop. Probably not needed.
};
CIMGUI_API void                     ImDrawDataSnapshot_Clear(ImDrawDataSnapshot* self);
CIMGUI_API void                     ImDrawDataSnapshot_SnapUsingSwap(ImDrawDataSnapshot* self, ImDrawData* src, double current_time);  // Efficient snapshot by swapping data, meaning "src" is unusable.
// Internals
CIMGUI_API ImGuiID                  ImDrawDataSnapshot_GetDrawListID(ImDrawDataSnapshot* self, ImDrawList* src_list);                  // Hash pointer
CIMGUI_API ImDrawDataSnapshotEntry* ImDrawDataSnapshot_GetOrAddEntry(ImDrawDataSnapshot* self, ImDrawList* src_list);

//-----------------------------------------------------------------------------
// ImDrawDataSnapshot - IMPLEMENTATION
//-----------------------------------------------------------------------------
#ifdef __cplusplus
} // End of extern "C" block
#endif
